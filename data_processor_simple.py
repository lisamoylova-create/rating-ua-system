import pandas as pd
import logging
from app import db
from models import Company

def process_excel_file_simple(filepath):
    """Ultra-simple file processing without any database operations"""
    try:
        logging.info("üîÑ –ü—Ä–æ—Å—Ç–∏–π —Ç–µ—Å—Ç —á–∏—Ç–∞–Ω–Ω—è —Ñ–∞–π–ª—É...")
        
        # Read file
        if filepath.endswith('.csv'):
            df = pd.read_csv(filepath, encoding='utf-8')
        else:
            df = pd.read_excel(filepath)
        
        logging.info(f"üìä –§–∞–π–ª –º—ñ—Å—Ç–∏—Ç—å {len(df)} —Ä—è–¥–∫—ñ–≤ —Ç–∞ {len(df.columns)} –∫–æ–ª–æ–Ω–æ–∫")
        logging.info(f"üìã –ö–æ–ª–æ–Ω–∫–∏: {list(df.columns)}")
        
        # Count companies without database operations
        if '–ö–æ–¥ –Ñ–î–†–ü–û–£' in df.columns or '—î–¥—Ä–ø–æ—É' in df.columns or 'edrpou' in df.columns:
            edrpou_col = None
            for col in ['–ö–æ–¥ –Ñ–î–†–ü–û–£', '—î–¥—Ä–ø–æ—É', 'edrpou']:
                if col in df.columns:
                    edrpou_col = col
                    break
            
            if edrpou_col:
                valid_companies = df[df[edrpou_col].notna()]
                logging.info(f"‚úÖ –ó–Ω–∞–π–¥–µ–Ω–æ {len(valid_companies)} –∫–æ–º–ø–∞–Ω—ñ–π –∑ –Ñ–î–†–ü–û–£")
                return len(valid_companies), 0
        
        logging.info("‚ö†Ô∏è –Ñ–î–†–ü–û–£ –∫–æ–ª–æ–Ω–∫–∞ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–∞")
        return 0, len(df)
        
    except Exception as e:
        logging.error(f"‚ùå –ü–æ–º–∏–ª–∫–∞ —á–∏—Ç–∞–Ω–Ω—è —Ñ–∞–π–ª—É: {e}")
        return 0, 1

def merge_company_data_simple(merge_filepath):
    """Simple file merge test without database"""
    try:
        if merge_filepath.endswith('.csv'):
            df = pd.read_csv(merge_filepath, encoding='utf-8')
        else:
            df = pd.read_excel(merge_filepath)
        
        logging.info(f"üìä –§–∞–π–ª –¥–ª—è –∑–ª–∏—Ç—Ç—è –º—ñ—Å—Ç–∏—Ç—å {len(df)} —Ä—è–¥–∫—ñ–≤")
        
        # Simple count of valid EDRPOUs
        edrpou_col = None
        for col in ['–ö–æ–¥ –Ñ–î–†–ü–û–£', '—î–¥—Ä–ø–æ—É', 'edrpou']:
            if col in df.columns:
                edrpou_col = col
                break
        
        if edrpou_col:
            valid_merge = df[df[edrpou_col].notna()]
            return len(valid_merge), 0
        
        return 0, len(df)
        
    except Exception as e:
        logging.error(f"‚ùå –ü–æ–º–∏–ª–∫–∞ —á–∏—Ç–∞–Ω–Ω—è —Ñ–∞–π–ª—É –∑–ª–∏—Ç—Ç—è: {e}")
        return 0, 1